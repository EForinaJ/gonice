// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package sys_circle

import (
	"github.com/gogf/gf/errors/gerror"
	"github.com/gogf/gf/frame/g"
)

// Fill with you ideas below.

func SeleteList(query *QueryParam) ([]*DaoEntity, int, error) {

	model := g.DB().Table("sys_circle").As("a").
		LeftJoin("sys_category as b", "b.cate_id = a.cate_id").
		LeftJoin("sys_user as c", "c.user_id = a.user_id")
	model.Where("a.del_flag = '0' ")
	if query != nil {
		if query.CircleName != "" {
			model.Where("a.circle_name like ?", "%"+query.CircleName+"%")
		}
		if query.CateId != "" {
			model.Where("a.cate_id =?", query.CateId)
		}
		if query.Status != "" {
			model.Where("a.status =?", query.Status)
		}
		if query.StartTime != "" {
			model.Where("date_format(a.create_time,'%y%m%d') >= date_format(?,'%y%m%d')", query.StartTime)
		}
		if query.EndTime != "" {
			model.Where("date_format(a.create_time,'%y%m%d') <= date_format(?,'%y%m%d')", query.EndTime)
		}
	}
	if query.OrderByColumn != "" {
		query.OrderByColumn = "a." + query.OrderByColumn
		model.Order(query.OrderByColumn + " " + query.Sort)
	}
	model.Page(query.Page, query.Limit)
	total, err := model.Count()
	if err != nil {
		return nil, 0, gerror.New("查询错误")
	}
	model.Fields(`	
		b.cate_name,c.nick_name,a.circle_id,a.circle_name,a.circle_img,a.status,a.create_time
	`)
	var result []*DaoEntity
	err = model.Structs(&result)
	if err != nil && result != nil {
		return nil, 0, gerror.New("查询错误")
	}

	return result, total, nil

}
